<?php
/*
 * Generated by CRUDigniter v2.3 Beta
 * www.crudigniter.com
 */

class Question_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get question by question_id
     */
    function get_question($question_id)
    {
        $question = $this->db->query("
            SELECT
                *

            FROM
                `questions`

            WHERE
                `question_id` = ?
        ",array($question_id))->row_array();

        return $question;
    }

    /*
     * Get all questions
     */
    function get_all_questions($formId)
    {

        $this->db->select('*');
        $this->db->from('questions');
        $this->db->where('question_form', $formId);
        $questions = $this->db->get();

        return $questions->result_array();
    }


    /*
     * function to add new question
     */
    function add_question($params)
    {
        $this->db->insert('questions',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update question
     */
    function update_question($question_id,$params, $newQuestionType)
    {
        foreach ($params as $key => $question){
            $this->db->set('question_label', $question);
            $this->db->set('question_type', $newQuestionType[$key]);
            $this->db->query("SET FOREIGN_KEY_CHECKS=0");
            $this->db->where('question_id',$question_id[$key]);
            $this->db->update('questions');
        }
    }

    /*
     * function to delete question
     */
    function delete_question($question_id)
    {
        $response = $this->db->delete('questions',array('question_id'=>$question_id));
        if($response)
        {
            return "question deleted successfully";
        }
        else
        {
            return "Error occuring while deleting question";
        }
    }

    /*
     * Get answers to display on edit form page
     */
    function get_answers(){
        $this->db->select('*');
        $this->db->from('answers');
        $answers = $this->db->get();

        return $answers->result_array();
    }

    /*
     * Get answers to display on project page
     */
    function get_project_answers($projectId){
        $this->db->select('*');
        $this->db->from('answers_project');
        $this->db->where('answers_project.answer_project', $projectId);
        $answers = $this->db->get();

        return $answers->result_array();
    }

    function get_project_question_answers($questionId){
        $this->db->select('*');
        $this->db->from('answers_project');
        $this->db->where('answers_project.answer_question', $questionId);
        $answers = $this->db->get();

        return $answers->result_array();
    }

    /*
     * Get questions for project
     */
    function get_project_questions($projectId){
        $this->db->select('*');
        $this->db->from('questions_project');
        $this->db->where('questions_project.question_project', $projectId);
        $questions = $this->db->get();

        return $questions->result_array();
    }

    function update_answers($answer_id, $question_id,$params){

        foreach ($params as $key => $answer){
//            var_dump($question_id[$key]);
            $this->db->set('ans_value', $answer);
            $this->db->query("SET FOREIGN_KEY_CHECKS=0");
            $this->db->where('ans_id', $answer_id[$key]);
            $this->db->where('ans_question',$question_id[$key]);
            $this->db->update('answers');
        }

    }
}
